import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score 

(X_train,Y_train),(X_test,Y_test)=keras.datasets.mnist.load_data()
X_train=X_train.reshape(-1,28,28,1).astype('float32')/255.0
X_test=X_test.reshape(-1,28,28,1).astype('float32')/255.0

model=keras.models.Sequential([
    keras.layers.Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1)),
    keras.layers.MaxPooling2D((2,2)),                            
    keras.layers.Flatten(),
    keras.layers.Dense(64,activation='relu'),
    keras.layers.Dense(10,activation='softmax'),
])
model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])
model.fit(X_train,Y_train,epochs=5,batch_size=128,validation_data=(X_test,Y_test))

test_loss,test_acc=model.evaluate(X_test,Y_test)
print(f'Test accuracy:{test_acc:.2f}')
pre=model.predict(X_test)
i=1
plt.grid(False)
plt.imshow((X_test[i].reshape(28,28)*255).astype(np.uint8),cmap='gray')
predicted_label=np.argmax(pre[i])
true_label=Y_test[i]
print(f'Predicted Label:{predicted_label} True Label:{true_label}')
plt.show()
